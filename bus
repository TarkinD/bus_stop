import json
# import re

data = json.loads(input())
"""
step 2
errors = {'bus_id': 0, 'stop_id': 0, 'stop_name': 0, 'next_stop': 0, 'stop_type': 0, 'a_time': 0}
stop_type_match = ['S','O','F', '']
for bus in data:
    stop_name_template = '^([A-Z][\w]+ )?([A-Z][\w]+) (Road|Avenue|Street|Boulevard)$'
    stop_name_match = re.match(stop_name_template, bus['stop_name'])
    a_time_template ='([0-1][0-9]|2[0-3]):([0-5][0-9])$'
    a_time_match = re.match(a_time_template, bus['a_time'])
    if type(bus['bus_id']) != int or not bus['bus_id']:
        errors['bus_id'] += 1
    if type(bus['stop_id']) != int:
        errors['stop_id'] += 1
    if bus['stop_type'] not in stop_type_match or len(bus['stop_type']) > 1:
        errors['stop_type'] += 1
    if type(bus['next_stop']) != int:
        errors['next_stop'] += 1
    if not stop_name_match:
        errors['stop_name'] += 1

    if not a_time_match:
        errors['a_time'] += 1

print(f"Format validation: {sum(list(errors.values()))} errors")
error_list = list(errors.values())

# for bus, error in errors.items():
#   print(f'{bus}: {error}')
print(f"stop_name: {error_list[2]}")
print(f"stop_type: {error_list[4]}")
print(f"a_time: {error_list[5]}")
"""
"""
step 3
bus_128 = []
bus_256 = []
bus_512 = []
bus_1024 = []

for bus in data:
    if bus['bus_id'] == 128:
        bus_128.append(bus)
    elif bus['bus_id'] == 256:
        bus_256.append(bus)
    elif bus['bus_id'] == 512:
        bus_512.append(bus)
    elif bus['bus_id'] == 1024:
        bus_1024.append(bus)

print('Line names and number of stops:')
print('bus_id: 128, stops:', len(bus_128))
print('bus_id: 256, stops:', len(bus_256))
print('bus_id: 512, stops:', len(bus_512))
if len(bus_1024) != 0:
    print(f"bus_id: 1024, stops:", len(bus_1024))
"""
# step 4
"""
bus_128 = []
bus_256 = []
bus_512 = []
bus_1024 = []
stop_128 = []
stop_256 = []
stop_512 = []
for bus in data:
    if bus['bus_id'] == 128:
        bus_128.append(bus)
        stop_128.append(bus['stop_name'])
    if bus['bus_id'] == 256:
        bus_256.append(bus)
        stop_256.append(bus['stop_name'])
    if bus['bus_id'] == 512:
        bus_512.append(bus)
        stop_512.append(bus['stop_name'])

check = True
if bus_128:
    start_128 = 0
    finish_128 = 0
    for bus in bus_128:
        if bus['stop_type'] == 'S':
            start_128 += 1
        if bus['stop_type'] == 'F':
            finish_128 +=1
    if start_128 != 1 or finish_128 != 1:
        check = False
        line = '128'

if check is True and bus_256 != []:
    start_256 = 0
    finish_256 = 0
    for bus in bus_256:
        if bus['stop_type'] == 'S':
            start_256 += 1
        if bus['stop_type'] == 'F':
            finish_256 +=1
    if start_256 != 1 or finish_256 != 1:
        check = False
        line = '256'

if check is True and bus_512 != []:
    start_512 = 0
    finish_512 = 0
    for bus in bus_512:
        if bus['stop_type'] == 'S':
            start_512 += 1
        if bus['stop_type'] == 'F':
            finish_512 +=1
    if start_512 != 1 or finish_512 !=1:
        check = False
        line = '512'




# Recapitulation:
if check is False:
    print(f"There is no start or end stop for the line: {line}.")

else:
    starting = set()
    finish = set()
    transfer = set()
    for stop in stop_128:
        if stop in stop_256:
            transfer.add(stop)
        if stop in stop_512:
            transfer.add(stop)
    for stop in stop_256:
        if stop in stop_512:
            transfer.add(stop)


    for bus in data:
        if bus['stop_type'] == 'F':
            finish.add(bus['stop_name'])
        if bus['stop_type'] == 'S':
            starting.add(bus['stop_name'])
    starting = sorted(list(starting))
    finish = sorted(list(finish))
    transfer = sorted(list(transfer))
    print("Start stops:", len(starting), starting)
    print("Transfer stops:", len(transfer), transfer)
    print("Finish stops:", len(finish), finish)
    """
"""
# step 5
bus_128 = []
bus_128_stop = []
new_h_128 = []
bus_256 = []
bus_256_stop = []
new_h_256 = []
bus_512 = []
bus_512_stop = []
new_h_512 = []
bus_1024 = []
bus_1024_stop = []
new_h_1024 = []
for bus in data:
    if bus['bus_id'] == 128:
        bus_128.append(bus['a_time'])
        bus_128_stop.append(bus['stop_name'])
    if bus['bus_id'] == 256:
        bus_256.append(bus['a_time'])
        bus_256_stop.append(bus['stop_name'])
    if bus['bus_id'] == 512:
        bus_512.append(bus['a_time'])
        bus_512_stop.append(bus['stop_name'])
    if bus['bus_id'] == 1024:
        bus_1024.append(bus['a_time'])
        bus_1024_stop.append(bus['stop_name'])

for i in range(len(bus_128)):
    h = [int(x) for x in bus_128[i].split(':')]
    new_h_128.append(h)

for i in range(len(bus_256)):
    h = [int(x) for x in bus_256[i].split(':')]
    new_h_256.append(h)

for i in range(len(bus_512)):
    h = [int(x) for x in bus_512[i].split(':')]
    new_h_512.append(h)

for i in range(len(bus_1024)):
    h = [int(x) for x in bus_1024[i].split(':')]
    new_h_1024.append(h)

check_128 = True
for i in range(len(new_h_128) - 1):
    if (new_h_128[i][0] > new_h_128[i + 1][0]) or (new_h_128[i][0] == new_h_128[i + 1][0] and new_h_128[i][1] >= new_h_128[i + 1][1]):
        problem_128 = bus_128_stop[i + 1]
        check_128 = False
        break

check_256 = True
for i in range(len(new_h_256) - 1):
    if (new_h_256[i][0] > new_h_256[i + 1][0]) or (new_h_256[i][0] == new_h_256[i + 1][0] and new_h_256[i][1] >= new_h_256[i + 1][1]):
        problem_256 = bus_256_stop[i + 1]
        check_256 = False
        break
check_512 = True
for i in range(len(new_h_512) - 1):
    if (new_h_512[i][0] > new_h_512[i + 1][0]) or (new_h_512[i][0] == new_h_512[i + 1][0] and new_h_512[i][1] >= new_h_512[i + 1][1]):
        problem_512 = bus_512_stop[i + 1]
        check_512 = False
        break
check_1024 = True
for i in range(len(new_h_1024) - 1):
    if (new_h_1024[i][0] > new_h_1024[i + 1][0]) or (new_h_1024[i][0] == new_h_1024[i + 1][0] and new_h_1024[i][1] >= new_h_1024[i + 1][1]):
        problem_1024 = bus_1024_stop[i + 1]
        check_1024 = False
        break
print("Arrival time test:")
if check_1024 is True and check_512 is True and check_256 is True and check_128 is True:
    print("OK")
else:
    if check_128 is False:
        print("bus_id line 128: wrong time on station", problem_128)
    if check_256 is False:
        print("bus_id line 256: wrong time on station", problem_256)
    if check_512 is False:
        print("bus_id line 512: wrong time on station", problem_512)
    if check_1024 is False:
        print("bus_id line 1024: wrong time on station", problem_1024)
        """

# step 6
stops = []
errors = []
for bus in data:
    if bus["stop_type"]  != "O":
        stops.append(bus["stop_name"])
for bus in data:
    if bus["stop_type"]  == "O" and bus["stop_name"] in stops:
        errors.append(bus["stop_name"])

print('On demand stops test:')
if errors:
    print('Wrong stop type:', sorted(errors))
else:
    print("OK")
